/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.pnlCasilla;

import Casilla.*;
import Jugador.Jugador;

/**
 *
 * @author baquiax
 */
public class PanelCasilla extends javax.swing.JPanel {

    public static final int ANCHO = 115;
    public static final int ALTO = 50;
    private Casilla casilla;

    /**
     * Creates new form Casilla
     * @param casilla
     */
    public PanelCasilla(Casilla casilla) {
        initComponents();
        this.casilla = casilla;
        super.setBackground(this.casilla.getColor());
        nombrarCasilla();
        ubicarCasilla();
        ocultarJugadores();
        super.repaint();
        super.setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblId = new javax.swing.JLabel();
        lblJ1 = new javax.swing.JLabel();
        lblJ2 = new javax.swing.JLabel();
        lblJ3 = new javax.swing.JLabel();
        lblJ4 = new javax.swing.JLabel();
        lblJ5 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(115, 50));

        lblId.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        lblId.setText("Id");

        lblJ1.setBackground(new java.awt.Color(0, 142, 177));
        lblJ1.setOpaque(true);
        lblJ1.setPreferredSize(new java.awt.Dimension(15, 15));

        lblJ2.setBackground(new java.awt.Color(0, 142, 177));
        lblJ2.setOpaque(true);
        lblJ2.setPreferredSize(new java.awt.Dimension(15, 15));

        lblJ3.setBackground(new java.awt.Color(0, 142, 177));
        lblJ3.setOpaque(true);
        lblJ3.setPreferredSize(new java.awt.Dimension(15, 15));

        lblJ4.setBackground(new java.awt.Color(0, 142, 177));
        lblJ4.setOpaque(true);
        lblJ4.setPreferredSize(new java.awt.Dimension(15, 15));

        lblJ5.setBackground(new java.awt.Color(0, 142, 177));
        lblJ5.setOpaque(true);
        lblJ5.setPreferredSize(new java.awt.Dimension(15, 15));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblJ1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblJ2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblJ3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblJ4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblJ5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblJ1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblJ2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblJ3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblJ4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblJ5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @return the casilla
     */
    public Casilla getCasilla() {
        return casilla;
    }

    /**
     * @param casilla the casilla to set
     */
    public void setCasilla(Casilla casilla) {
        this.casilla = casilla;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblJ1;
    private javax.swing.JLabel lblJ2;
    private javax.swing.JLabel lblJ3;
    private javax.swing.JLabel lblJ4;
    private javax.swing.JLabel lblJ5;
    // End of variables declaration//GEN-END:variables

    private void nombrarCasilla() {
        if (casilla instanceof CasillaInicio) {
            lblId.setText("Inicio");
        } else if (casilla instanceof CasillaFin) {
            lblId.setText("Meta");
        } else if (casilla instanceof CasillaBonoAvance) {
            CasillaBonoAvance aux = (CasillaBonoAvance) casilla;
            lblId.setText(String.valueOf(aux.getId()) + "("
                    + aux.getPosicionesParaAvanzar() + ")");
        } else if (casilla instanceof CasillaRetroceso) {
            CasillaRetroceso aux = (CasillaRetroceso) casilla;
            lblId.setText(String.valueOf(aux.getId()) + "("
                    + aux.getPosicionesParaRetroceder() + ")");
        } else if (casilla instanceof CasillaEscalera) {
            CasillaEscalera aux = (CasillaEscalera) casilla;
            lblId.setText(String.valueOf(aux.getId()) + " # ("
                    + aux.getIdCasillaSubir() + ")");
        } else if (casilla instanceof CasillaSerpiente) {
            CasillaSerpiente aux = (CasillaSerpiente) casilla;
            lblId.setText(String.valueOf(aux.getId()) + " $ ("
                    + aux.getIdCasillaBajar() + ")");
        } else {
            lblId.setText(String.valueOf(casilla.getId()));
        }
        lblId.repaint();
    }

    public void ubicarCasilla() {
        super.setLocation(casilla.getFila() * ANCHO, casilla.getColumna() * ALTO);
    }

    public void mostrarFichaJugador(int noJugador, Jugador jugador) {
        switch (noJugador) {
            case 1:
                lblJ1.setBackground(jugador.getColor());
                lblJ1.setVisible(true);
                break;
            case 2:
                lblJ2.setBackground(jugador.getColor());
                lblJ2.setVisible(true);
                break;
            case 3:
                lblJ3.setBackground(jugador.getColor());
                lblJ3.setVisible(true);
                break;
            case 4:
                lblJ4.setBackground(jugador.getColor());
                lblJ4.setVisible(true);
                break;
            case 5:
                lblJ5.setBackground(jugador.getColor());
                lblJ5.setVisible(true);
                break;
            default:
        }
    }

    public void ocultarFichaJugador(int noJugador) {
        switch (noJugador) {
            case 1:
                lblJ1.setVisible(false);
                break;
            case 2:
                lblJ2.setVisible(false);
                break;
            case 3:
                lblJ3.setVisible(false);
                break;
            case 4:
                lblJ4.setVisible(false);
                break;
            case 5:
                lblJ5.setVisible(false);
                break;
            default:
        }
    }

    private void ocultarJugadores() {
        lblJ1.setVisible(false);
        lblJ2.setVisible(false);
        lblJ3.setVisible(false);
        lblJ4.setVisible(false);
        lblJ5.setVisible(false);
    }

}
